@page "/add-task"
@using ToDoList.Model
@inject NavigationManager Navigation
@inject IJSRuntime JS
<h3>AddTask</h3>

<EditForm Model="@newerTask" OnValidSubmit="HandleValidInput">
    <DataAnnotationsValidator />

    <div>
        <label>Заголовок:</label><br />
        <InputText @bind-Value="newerTask.Title" class="form-input" />
        <ValidationMessage For="@(() => newerTask.Title)" />
    </div>

    <div>
        <label>Срок:</label><br />
        <InputDate @bind-Value="newerTask.DueDate" class="form-input" />
        <ValidationMessage For="@(() => newerTask.DueDate)" />
    </div>

    <div>
        <label>Приоритет:</label><br />
        <InputSelect @bind-Value="newerTask.Priority" class="form-input">
            @foreach(var p in Enum.GetValues<TaskPriority>())
            {
                <option value="@p">@p</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => newerTask.Priority)" />
    </div>

    <button type="submit">Сохранить задачу</button>
</EditForm>


<a href="/tasks">Вернуться к списку задач</a>

@code {
    TaskModel newerTask = new();
    async Task HandleValidInput()
    {
        Tasks.tasks.Add(newerTask);

        var json = System.Text.Json.JsonSerializer.Serialize(Tasks.tasks);
        await JS.InvokeVoidAsync("localStorage.setItem", "tasks", json);

        Navigation.NavigateTo("/tasks");
    }
}
