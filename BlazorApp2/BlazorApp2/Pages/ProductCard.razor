@inject CartService CartService
<head>
    <style>
        .special-class{
            border: 1px solid salmon;
            border-radius: 4px;
        }
    </style>
</head>


<div class="card m-2 " style="width: 18rem;" @attributes="AdditionalAttributes">
    <img src="@Product.ImageUrl" class="card-img-top" alt="@Product.Name"/>
    <div class="card-body">
        <h5 class="card-title">@Product.Name</h5>
        <p class="card-text">@Product.Description</p>
        <p class="fw-bold">@CurrencyService.ConvertPrices(Product.Price) @CurrencyService.GetCurrecy()</p>

        <div class="mb-2">
            <label>Количество: </label>
            <input type="number" class="form-control" min="1" @bind="Quantity" />
        </div>


        <button class="btn btn-primary" @onclick="AddToCart">Купить</button>
    </div>
</div>



@code {
    private int Quantity { get; set; } = default!;

    //[CascadingParameter]
    //public string Currency { get; set; } = "₽";

    [Parameter]
    public Product Product { get; set; } = default!;

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> AdditionalAttributes { get; set; } = new();

    [Inject]
    public CurrencyService CurrencyService { get; set; } = default!;

    async Task AddToCart()
    {
        for (int i = 0; i < Quantity; i++)
        {
            await CartService.AddToCart(Product);
        }

    }

    protected override void OnInitialized()
    {
        Console.WriteLine($"Товар загружен {Product.Name}");
    }
}

